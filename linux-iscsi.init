#!/bin/sh
#
# iscsi		This shell script takes care of starting and stopping iscsi.
#
# chkconfig:	2345 11 20
# description:	Start iSCSI to allow access to remote SCSI devices
#
# pidfile:	/var/run/iscsid.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Source oident configureation.
if [ -f /etc/sysconfig/iscsi ]; then
	. /etc/sysconfig/iscsi
fi

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down iscsi
		exit 1
	fi
else
	exit 0
fi

[ -z "$ISCSI_CONNFAILTIMEOUT" ] && ISCSI_CONNFAILTIMEOUT=30

RETVAL=0
# See how we were called.
case "$1" in
  start)
	# Start daemons.
	if [ ! -f /var/lock/subsys/iscsid ]; then
		msg_starting iscsid
		daemon iscsid
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/iscsid
		if [ -s /etc/fstab.iscsi ]; then
		    sleep 2
		    msg_starting "Mounting/fscking iscsi devices"
		    daemon iscsi-mountall
		fi
	else
		msg_already_running iscsid
	fi
	;;
  stop)
	# Stop daemons.
	if [ -f /var/lock/subsys/iscsid ]; then
	    	if [ -f /sys/class/scsi_host/iscsi/connfailtimeout ]; then
			echo "$ISCSI_CONNFAILTIMEOUT" > /sys/class/scsi_host/iscsi/connfailtimeout
		fi
		if [ -f /sys/class/scsi_host/iscsi/diskcommandtimeout ]; then
			echo "$ISCSI_DISKCOMMANDTIMEOUT" > /sys/class/scsi_host/iscsi/diskcommandtimeout
		fi
	    	sync
		sleep 3
		msg_stopping "Umounting iscsi devices"
		daemon iscsi-umountall -t -k
		msg_stopping iscsid
		killproc iscsid
		if [ -f /sys/class/scsi_host/iscsi/shutdown ] ; then
		    echo  > /sys/class/scsi_host/iscsi/shutdown
		fi
		rm -f /var/lock/subsys/iscsid >/dev/null 2>&1
	else
		msg_not_running iscsid
	fi
	;;
  restart|force-reload)
	$0 stop
	$0 start
	exit $?
	;;
  status)
	status iscsid
	exit $?
	;;
#  reload)
#	msg_reloading iscsi
#	killproc iscsi -HUP
#	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|status}"
	exit 3
esac

exit $RETVAL
